{{- if .Values.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    ingress.kubernetes.io/proxy-body-size: '0'
    ingress.kubernetes.io/ssl-redirect: 'true'
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: '0'
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    {{- if .Values.ingress.basicAuth }}
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: htpasswd
    nginx.ingress.kubernetes.io/auth-realm: "Enter your credentials"
    {{- end }}
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1200"
  labels:
    app: {{ template "geoserver.fullname" . }}
    chart: {{ template "geoserver.chart" . }}
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
    {{- with .Values.ingress.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  name: {{ template "geoserver.fullname" . }}
  namespace: {{ .Release.Namespace }}
spec:
  rules:
  {{- range .Values.ingress.hosts }}
  - host: {{ .host }}
    http:
      paths:
        - path: {{ $.Values.ingress.path }}
          pathType: Prefix
          backend:
            service:
              name: {{ template "geoserver.fullname" $ }}
              port:
                number: 80
        - path: {{ $.Values.ingress.path }}/rpa-status
          pathType: Prefix
          backend:
            service:
              name: {{ template "geoserver.fullname" $ }}
              port:
                number: 8000
  {{- end }}
  {{- if .Values.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.ingress.hosts }}
        - {{ .host }}
        {{- end }}

      secretName: {{ .Values.ingress.tls.secretName }}
  {{- end }}
{{- end }}
