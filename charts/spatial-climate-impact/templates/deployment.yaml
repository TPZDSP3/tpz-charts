apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "spatial-climate-impact.fullname" . }}
  labels:
    {{- include "spatial-climate-impact.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "spatial-climate-impact.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "spatial-climate-impact.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "spatial-climate-impact.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-ui
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http-sgt
              containerPort: 3000
          livenessProbe:
            httpGet:
              path: {{ .Values.basePath }}
              port: http-sgt
              scheme: HTTP
            failureThreshold: 3
            successThreshold: 1
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: {{ .Values.basePath }}
              port: http-sgt
              scheme: HTTP
            failureThreshold: 3
            successThreshold: 1
            periodSeconds: 10
          env:
            - name: MONGO_USER
              valueFrom:
                secretKeyRef:
                  name: {{ template "spatial-climate-impact.secretName" . }}
                  key: user
            - name: MONGO_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ template "spatial-climate-impact.secretName" . }}
                  key: password
            - name: MONGODB_URI
              value: "mongodb://$(MONGO_USER):$(MONGO_PASS)@{{ .Chart.Name }}-db:27017/{{ .Values.mongoInitDb }}"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "spatial-climate-impact.fullname" . }}-db
  labels:
    {{- include "spatial-climate-impact.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "spatial-climate-impact.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "spatial-climate-impact.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "spatial-climate-impact.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - image: mongo
          name: {{ .Chart.Name }}-db
          command: ["mongod"]
          args: ["--bind_ip_all", "--dbpath",{{ .Values.persistence.mountPath }}]
          lifecycle:
            postStart:
              exec:
                command: ["/docker-entrypoint-initdb.d/init-mongo.sh"]
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "spatial-climate-impact.secretName" . }}
                  key: user
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "spatial-climate-impact.secretName" . }}
                  key: password
            - name: MONGO_INITDB_DATABASE
              value: {{ .Values.mongoInitDb }}
          volumeMounts:
            - name : mongodb-scripts
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
            {{- if .Values.persistence.enabled }}
            - name: "mongo-data-dir"
              mountPath: {{ .Values.persistence.mountPath }}
              subPath: {{ .Values.persistence.subPath }}
            {{- end }}
          ports:
            - name: http-sgt-db
              containerPort: 27017
              protocol: TCP
      volumes:
        - name: mongodb-scripts
          configMap:
            name: {{ template "spatial-climate-impact.fullname" . }}
            defaultMode: 0777
            items:
              - key: init-mongo.sh
                path: init-mongo.sh
{{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
        - name: mongo-data-dir
          persistentVolumeClaim:
{{- with .Values.persistence.existingClaim }}
            claimName: {{ tpl . $ }}
{{- end }}
{{- else if .Values.persistence.enabled }}
        - name: mongo-data-dir
          persistentVolumeClaim:
            claimName: {{ template "spatial-climate-impact.fullname" . }}-mongodb-data-dir
{{- else if not .Values.persistence.enabled }}
        - name: mongo-data-dir
          emptyDir: {}
{{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
