{{- if .Values.ingress.enabled -}}
{{- $fullName := include "defra-efde.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "defra-efde.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ include "defra-efde.fullname" $ }}-api-tls
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}
---
{{- if .Values.shiny.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "defra-efde.fullname" . }}-shiny
  annotations:
    kubernetes.io/ingress.class: nginx    
    cert-manager.io/cluster-issuer: letsencrypt-prod
    ingress.kubernetes.io/proxy-body-size: '0'   
  labels:
    app: {{ include "defra-efde.fullname" . }}-shiny
spec:
  rules:
  {{- range .Values.shiny.ingress.hosts }}
  - host: {{ .host }}
    http:
      paths:
      - backend:
          service: 
            name: {{ include "defra-efde.fullname" $ }}-shiny
            port: 
              number: 80
        path: /ecology/shiny/
        pathType: Prefix
  {{- end }}
  {{- if .Values.shiny.ingress.tls.enabled }}
  tls:
    - hosts:
        {{- range .Values.shiny.ingress.hosts }}
        - {{ .host }}
        {{- end }}
      secretName: {{ include "defra-efde.fullname" . }}-shiny-tls
  {{- end }}
{{- end }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    ingress.kubernetes.io/proxy-body-size: "0"
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/upstream-vhost: dsptpzbuildartefacts.z33.web.core.windows.net
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /tags/ecology-fish-data-explorer/{{ .Values.explorer.version | default .Chart.AppVersion }}/$2
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite ^(/ecology/explorer)$ $1/ redirect;
      gzip              on;
      gzip_comp_level   1;
      gzip_min_length   20;
      gzip_http_version 1.1;
      gzip_proxied      any;
      gzip_types        text/css text/plain application/xml application/javascript application/json image/svg+xml;
      gzip_vary         on;
  name: defra-efde-explorer
spec:
  rules:
  {{- range .Values.shiny.ingress.hosts }}
  - host: {{ .host }}
    http:
      paths:
      - backend:
          service: 
            name: {{ include "defra-efde.fullname" $ }}-explorer
            port: 
              number: 443
        path: /ecology/explorer(/|$)(.*)
        pathType: Prefix
  {{- end }}
