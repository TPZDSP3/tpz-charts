apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rpa-land-parcels.fullname" . }}
  labels:
    {{- include "rpa-land-parcels.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "rpa-land-parcels.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "rpa-land-parcels.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "rpa-land-parcels.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-ui
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http-rpa
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /rpa
              port: http-rpa
          readinessProbe:
            httpGet:
              path: /rpa
              port: http-rpa
          env:
            - name: GEOSERVER_URL
              value: https://{{ .Values.ingress.host }}/{{ .Values.geoserverPath }}
            - name: PARCELS_LAYER
              value: {{ .Values.parcelsLayer }}
            - name: COVERS_LAYER
              value: {{ .Values.coversLayer }}
            - name: HEDGES_LAYER
              value: {{ .Values.hedgesLayer }}
            - name: MONGO_USER
              valueFrom:
                secretKeyRef:
                  name: {{ template "rpa-land-parcels.secretName" . }}
                  key: user
            - name: MONGO_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ template "rpa-land-parcels.secretName" . }}
                  key: password
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "rpa-land-parcels.secretName" . }}
                  key: apiKey    
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - image: mongo
          name: {{ .Chart.Name }}-db
          args: ["--dbpath","/data/db"]
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "rpa-land-parcels.secretName" . }}
                  key: user  
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "rpa-land-parcels.secretName" . }}
                  key: password
            - name: MONGO_INITDB_DATABASE
              value: {{ .Values.mongoInitDb }}
          volumeMounts:
            - name: "mongo-data-dir"
              mountPath: "/data/db"
          ports:
            - name: http-rpa-db
              containerPort: 27017
              protocol: TCP              
      volumes:
        - name: "mongo-data-dir"
          persistentVolumeClaim:
          claimName: "pvc"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
